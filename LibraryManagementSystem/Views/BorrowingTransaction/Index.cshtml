@model IEnumerable<LibraryManagementSystem.BLL.DTos.BookTransactionDto>

@{
ViewData["Title"] = "Book Transactions";
var selectedStatus = ViewContext.HttpContext.Request.Query["status"].ToString();
var borrowDate = ViewContext.HttpContext.Request.Query["borrowDate"].ToString();
var returnDate = ViewContext.HttpContext.Request.Query["returnDate"].ToString();

var totalCount = ViewBag.TotalCount is int count ? count : 0;
var pageNumber = ViewBag.PageNumber  is int page ? page : 1;
var pageSize =   ViewBag.PageSize   is int size ? size : 10;
var totalPages = (int)Math.Ceiling(totalCount / (double)pageSize);
}

<div class="container mt-4"> <h2 class="mb-4 text-primary">📚 Book Transactions</h2>
<div class="card shadow-sm mb-4">
	<div class="card-body">
		<form method="get" class="row g-2 align-items-end" id="filterForm">
			<div class="col-md-4">
				<label class="form-label">Status</label>
				<select name="status" class="form-select" onchange="document.getElementById('filterForm').submit();">
					<option value="">All Status</option>
					<option value="available" selected="@(selectedStatus == "available")">Available</option>
					<option value="borrowed" selected="@(selectedStatus == "borrowed")">Borrowed</option>
				</select>
			</div>
			<div class="col-md-4">
				<label class="form-label">Sort By</label>
				<select name="sortBy" class="form-select" onchange="document.getElementById('filterForm').submit();">
					<option value="borrowDateDesc" selected="@(ViewBag.SortBy == null || ViewBag.SortBy == "borrowDateDesc")">Latest Borrowed</option>
					<option value="returnDateDesc" selected="@(ViewBag.SortBy == "returnDateDesc")">Latest Returned</option>
				</select>
			</div>
			<div class="col-md-4 text-end">
				<a href="@Url.Action("Index")" class="btn btn-outline-secondary">Reset</a>
			</div>
		</form>
	</div>
</div>

@if (!Model.Any())
{
	<div class="alert alert-warning">No transactions found.</div>
}
else
{
	<table class="table table-bordered table-hover table-striped align-middle">
		<thead class="table-light">
			<tr>
				<th>Book Title</th>
				<th>Status</th>
				<th>Borrowed Date</th>
				<th>Returned Date</th>
				<th class="text-center">Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var tx in Model)
			{
				<tr>
					<td>@tx.BookTitle</td>
					<td>
						@if (tx.IsReturned)
						{
							<span class="badge bg-success">Available</span>
						}
						else
						{
							<span class="badge bg-warning text-dark">Borrowed</span>
						}
					</td>
					<td>@tx.BorrowedDate.ToString("yyyy-MM-dd")</td>
					<td>@(tx.ReturnedDate?.ToString("yyyy-MM-dd") ?? "-")</td>
					<td class="text-center">
						@if (!tx.IsReturned)
						{
							<form asp-action="Return" method="post" class="d-inline">
								<input type="hidden" name="transactionId" value="@tx.Id" />
								<button type="submit" class="btn btn-sm btn-success" onclick="return confirm('Return this book?');">
									Return
								</button>
							</form>
						}
						else
						{
							<a href="@Url.Action("Borrow", "BorrowingTransaction", new { bookId = tx.BookId })" class="btn btn-sm btn-primary">
								Borrow
							</a>
						}
					</td>
				</tr>
			}
		</tbody>
	</table>

	<nav aria-label="Page navigation">
		<ul class="pagination justify-content-center">
			<li class="page-item @(pageNumber == 1 ? "disabled" : "")">
				<a class="page-link" href="@Url.Action("Index", new { status = selectedStatus, borrowDate, returnDate, pageNumber = pageNumber - 1 })">Previous</a>
			</li>
			@for (int i = 1; i <= totalPages; i++)
			{
				<li class="page-item @(pageNumber == i ? "active" : "")">
					<a class="page-link" href="@Url.Action("Index", new { status = selectedStatus, borrowDate, returnDate, pageNumber = i })">@i</a>
				</li>
			}
			<li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
				<a class="page-link" href="@Url.Action("Index", new { status = selectedStatus, borrowDate, returnDate, pageNumber = pageNumber + 1 })">Next</a>
			</li>
		</ul>
	</nav>
}
</div>

